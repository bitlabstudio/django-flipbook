# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2022-01-14 08:59
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.file
import filer.fields.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('filer', '0011_auto_20190418_0137'),
    ]

    operations = [
        migrations.CreateModel(
            name='Flipbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('is_published', models.BooleanField(default=False, verbose_name='Is published')),
                ('book_type', models.CharField(blank=True, choices=[(b'default', 'default')], max_length=256, verbose_name='Type')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('email', models.EmailField(blank=True, max_length=200, verbose_name='eMail')),
            ],
        ),
        migrations.CreateModel(
            name='FlipbookCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('email', models.EmailField(blank=True, max_length=200, verbose_name='eMail')),
                ('large_image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flipbook_categories_with_large_images', to=settings.FILER_IMAGE_MODEL, verbose_name='Large image')),
                ('small_image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flipbook_categories_with_small_images', to=settings.FILER_IMAGE_MODEL, verbose_name='Small image')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flipbook_categories', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='FlipbookDownload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(verbose_name='Position')),
                ('file_type', models.CharField(blank=True, choices=[(b'pdf', 'PDF'), (b'video', 'Video')], max_length=12, verbose_name='File type')),
                ('file', filer.fields.file.FilerFileField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flipbook_downloads', to='filer.File', verbose_name='File')),
                ('flipbook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='flipbook.Flipbook', verbose_name='Flipbook')),
            ],
            options={
                'ordering': ['position', 'flipbook', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='FlipbookPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(verbose_name='Position')),
                ('content', models.TextField(blank=True, max_length=8192, verbose_name='Content')),
                ('video_url', models.URLField(blank=True, verbose_name='Video URL')),
                ('page_type', models.CharField(blank=True, choices=[(b'default', 'default')], max_length=256, verbose_name='Type')),
                ('flipbook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='flipbook.Flipbook', verbose_name='Flipbook')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pages', to=settings.FILER_IMAGE_MODEL, verbose_name='Image')),
            ],
            options={
                'ordering': ['position', 'flipbook', 'pk'],
            },
        ),
        migrations.AddField(
            model_name='flipbook',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flipbooks', to='flipbook.FlipbookCategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='flipbook',
            name='download',
            field=filer.fields.file.FilerFileField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='download_flipbooks', to='filer.File', verbose_name='Download'),
        ),
        migrations.AddField(
            model_name='flipbook',
            name='image',
            field=filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flipbooks', to=settings.FILER_IMAGE_MODEL, verbose_name='Image'),
        ),
        migrations.AddField(
            model_name='flipbook',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flipbooks', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='flipbook',
            name='video_download',
            field=filer.fields.file.FilerFileField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_download_flipbooks', to='filer.File', verbose_name='Video Download'),
        ),
    ]
